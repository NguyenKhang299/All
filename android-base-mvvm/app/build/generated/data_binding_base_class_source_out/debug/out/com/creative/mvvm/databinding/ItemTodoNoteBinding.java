// Generated by view binder compiler. Do not edit!
package com.creative.mvvm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.creative.mvvm.R;
import com.rishabhharit.roundedimageview.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTodoNoteBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final RoundedImageView imageView;

  @NonNull
  public final TextView itemNotesDesc;

  @NonNull
  public final TextView itemNotesTitle;

  @NonNull
  public final TextView itemNotesUpdateTime;

  private ItemTodoNoteBinding(@NonNull CardView rootView, @NonNull RoundedImageView imageView,
      @NonNull TextView itemNotesDesc, @NonNull TextView itemNotesTitle,
      @NonNull TextView itemNotesUpdateTime) {
    this.rootView = rootView;
    this.imageView = imageView;
    this.itemNotesDesc = itemNotesDesc;
    this.itemNotesTitle = itemNotesTitle;
    this.itemNotesUpdateTime = itemNotesUpdateTime;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTodoNoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTodoNoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_todo_note, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTodoNoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView;
      RoundedImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.item_notes_desc;
      TextView itemNotesDesc = ViewBindings.findChildViewById(rootView, id);
      if (itemNotesDesc == null) {
        break missingId;
      }

      id = R.id.item_notes_title;
      TextView itemNotesTitle = ViewBindings.findChildViewById(rootView, id);
      if (itemNotesTitle == null) {
        break missingId;
      }

      id = R.id.item_notes_update_time;
      TextView itemNotesUpdateTime = ViewBindings.findChildViewById(rootView, id);
      if (itemNotesUpdateTime == null) {
        break missingId;
      }

      return new ItemTodoNoteBinding((CardView) rootView, imageView, itemNotesDesc, itemNotesTitle,
          itemNotesUpdateTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
