// Generated by data binding compiler. Do not edit!
package com.creative.mvvm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.creative.mvvm.R;
import com.creative.mvvm.ui.note.view.UpdateNoteFragmentViewModel;
import com.creative.mvvm.ui.view.XToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class UpdateNoteFragmentBinding extends ViewDataBinding {
  @NonNull
  public final FloatingActionButton fabSaveNote;

  @NonNull
  public final RelativeLayout layoutWaterMark;

  @NonNull
  public final ConstraintLayout updateNoteContainer;

  @NonNull
  public final TextView waterMarkText;

  @NonNull
  public final LayoutNoteContentBinding wrapNoteContent;

  @NonNull
  public final XToolbar xToolBar;

  @Bindable
  protected UpdateNoteFragmentViewModel.UpdateNoteFragmentUiEvent mUiEvent;

  protected UpdateNoteFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      FloatingActionButton fabSaveNote, RelativeLayout layoutWaterMark,
      ConstraintLayout updateNoteContainer, TextView waterMarkText,
      LayoutNoteContentBinding wrapNoteContent, XToolbar xToolBar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.fabSaveNote = fabSaveNote;
    this.layoutWaterMark = layoutWaterMark;
    this.updateNoteContainer = updateNoteContainer;
    this.waterMarkText = waterMarkText;
    this.wrapNoteContent = wrapNoteContent;
    this.xToolBar = xToolBar;
  }

  public abstract void setUiEvent(
      @Nullable UpdateNoteFragmentViewModel.UpdateNoteFragmentUiEvent uiEvent);

  @Nullable
  public UpdateNoteFragmentViewModel.UpdateNoteFragmentUiEvent getUiEvent() {
    return mUiEvent;
  }

  @NonNull
  public static UpdateNoteFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.update_note_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static UpdateNoteFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<UpdateNoteFragmentBinding>inflateInternal(inflater, R.layout.update_note_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static UpdateNoteFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.update_note_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static UpdateNoteFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<UpdateNoteFragmentBinding>inflateInternal(inflater, R.layout.update_note_fragment, null, false, component);
  }

  public static UpdateNoteFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static UpdateNoteFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (UpdateNoteFragmentBinding)bind(component, view, R.layout.update_note_fragment);
  }
}
